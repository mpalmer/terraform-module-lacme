variable "name" {
  description = "The name of this L'ACME certificate (used to generate unique resource names)"
  type        = string

  validation {
    condition     = length(var.name) > 0 && length(var.name) <= 16
    error_message = "The name value must be between 1 and 16 characters in length."
  }

  validation {
    condition     = can(regex("^[a-zA-Z0-9-]*$", var.name))
    error_message = "The name value can only contain alphanumerics and hyphens."
  }
}

variable "certificate_names" {
  description = "The FQDNs for which this L'ACME certificate should be issued"
  type        = list(string)
}

variable "challenge_lb_listener_arn" {
  description = "The ARN of the load balancer listener which will receive name verification challenge requests (should a HTTP listener on port 80)"
  type        = string
}

variable "acme_directory_url" {
  description = "The directory 'entrypoint' URL for the ACME server you wish to use (the default is Let's Encrypt production)"
  type        = string
  default     = "https://acme-v02.api.letsencrypt.org/directory"
}

variable "kms_key_arn" {
  description = "If set, will store an encrypted copy of the certificate's private key in the 'private_key' item in DynamoDB"
  type        = string
  default     = null
}

variable "cloudwatch_kms_key_id" {
  description = "Encrypt the CloudWatch logs generated by the lambdas with the specified customer-managed key"
  type        = string
  default     = null
}

variable "challenge_listener_rule_priority" {
  description = "The priority of the listener rule which forwards requests for /.well-known/acme-challenge/* to the serve_challenge lambda"
  type        = number
  default     = 42
}
